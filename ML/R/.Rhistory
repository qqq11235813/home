6*3
2^19
6*3
2^
2
2^
2
6*3
sqrt(2)
abs(-2)
abs(-2.2)
variable = 2.2
variable
variable2 <-2.3
variable2
ls()
variable.test=1.1
variable.test
c(2,3,4)
Country = c("China","China")
Country = c("Brazil","China","India","Swiss","USA")
Life = c(74,76,65,83,79)
Life[4]
Life[5]
Life[0]
Life[-1]
CountryData = data.frame(Country,Life)
View(CountryData)
CountryData$Population = (199000,1390000,1240000,7997,318000)
CountryData$Population = c(199000,1390000,1240000,7997,318000)
Country = c("Can","JJ")
Life = c(59,1009)
Pop = c("test1",2)
NewData = data.frame(Country,Life,Pop)
CountryData = rbind(CountryData,NewData)
Population = c("test1",2)
NewData = data.frame(Country,Life,Population)
CountryData = rbind(CountryData,NewData)
CountryData
getwd()
WHO = read.csv(AMyLab/ML/R/WHO.csv)
WHO = read.csv("AMyLab/ML/R/WHO.csv")
View(WHO)
summary(WHO)
WHO_Africa = subset(WHO,region == "Africa")
WHO_Africa = subset(WHO,Region == "Africa")
str(WHO_Africa)
WHO$Under15
sd(WHO$Under15)
summary(WHO$Under15)
summary(WHO$Region)
summary(WHO$GNI)
WHO$Country[which.min(WHO$Under15)]
WHO$Country[which.max(WHO$Under15)]
plot(WHO$Region)
plot(WHO$Under15)
View(CountryData)
View(WHO)
Outliers = subset(WHO,GNI>10000 & FertilityRate> 2.5)
Outliers[c("Country","GNI","FertilityRate")]
mean(WHO$Over60)
WHO$Country[which.min(WHO$Over60)]
WHO$Country[which.max(WHO$LiteracyRate)]
WHO$Country[which.min(WHO$LiteracyRate)]
hist(WHO$Region)
hist(WHO$Over60)
hist(WHO$Over60 ~ WHO$Region)
boxplot(WHO$Over60 ~ WHO$Region)
boxplot(WHO$Over60 ~ WHO$Region,xlba = "",ylab = "qqq",mina = "aaa")
tapply(WHO$Over60, WHO$Region,mean)
tapply(WHO$LiteracyRate, WHO$Region,min, na.rm = TRUE)
tapply(WHO$ChildMortality, WHO$Region, mean  )
getwd()
USDA = read.csv("AMyLab/ML/R")
USDA = read.csv("AMyLab/ML/R/USDA.csv")
str(USDA)
summary(USDA)
View(USDA)
USDA$Sodium
which.max(USDA$Sodium)
names(USDA)
USDA$Description[which.max(USDA$Sodium)]
highSodium = subset(USDA , Sodium > 10000)
highSodium$Description
View(highSodium)
match("CAVIAR",USDA$Description)
match("SOUP",USDA$Description)
match("CAVIAR",USDA$Description)
USDA$Sodium[match("CAVIAR",USDA$Description)]
summary(USDA$Sodium)
sd(USDA$Sodium, na.rm = TRUE)
plot(USDA$Protein, USDA$TotalFat)
plot(USDA$Protein, USDA$TotalFat, xlab = "Protein")
plot(USDA$Protein, USDA$TotalFat, xlab = "Protein", ylab = "Fat")
hist(USDA$VitaminC)
hist(USDA$VitaminC, xlim = c(0, 100))
hist(USDA$VitaminC, xlim = c(0, 1000), breaks = 100)
hist(USDA$VitaminC, xlim = c(0, 1000), breaks = 1000)
hist(USDA$VitaminC, xlim = c(0, 100), breaks = 1000)
hist(USDA$VitaminC, xlim = c(0, 100), breaks = 5000)
boxplot(USDA$Sugar)
boxplot(USDA$Sugar)
HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium))
HighSodium
HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium, na.rm = TRUE))
HighSodium
USDA$HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium, na.rm = TRUE))
name(USDA)
names(USDA)
USDA$HighFat = as.numeric(USDA$TotalFat > USDA> boxplot(WHO$Over60 ~ WHO$Region)
> boxplot(WHO$Over60 ~ WHO$Region,xlba = "",ylab = "qqq",mina = "aaa")
> tapply(WHO$Over60, WHO$Region,mean)
Africa              Americas
5.220652             10.943714
Eastern Mediterranean                Europe
5.620000             19.774906
South-East Asia       Western Pacific
8.769091             10.162963
> tapply(WHO$LiteracyRate, WHO$Region,min, na.rm = TRUE)
Africa              Americas
31.1                  75.2
Eastern Mediterranean                Europe
63.9                  95.2
South-East Asia       Western Pacific
56.8                  60.6
> tapply(WHO$ChildMortality, WHO$Region, mean  )
USDA$HighFat = as.numeric(USDA$TotalFat > mean(USDA$TotalFat))
table(USDA$HighSodium)
table(USDA$HighSodium & USDA$HighFat)
table(USDA$HighSodium , USDA$HighFat)
table(USDA$HighSodium , USDA$HighFat)
tabke
table
a=table(USDA$HighSodium , USDA$HighFat)
a
table(USDA$HighFat)
USDA$HighFat = as.numeric(USDA$TotalFat > mean(USDA$TotalFat, na.rm= TRUE))
table(USDA$HighFat)
a=table(USDA$HighSodium , USDA$HighFat)
a
tapply(USDA$Iron, USDA$HighSodium, mean, ns.rm = TRUE)
tapply(USDA$Iron, USDA$HighSodium, mean, na.rm = TRUE)
tapply(USDA$Sugar, USDA$HighSodium, mean, na.rm = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
print A
print a
source('~/.active-rstudio-document', echo=TRUE)
2*3
A = 483
print(a)
library(caret)
installe.packages("caret")
install.packages("caret")
library(caret)
install.packages(class)
install.packages("class")
install.packages("ggplot2")
library(class)
library(ggplot2)
library(caret)
library(ggplot)
library(ggplot2)
installed.packages("e1071")
install.packages("e1071")
library(e1071)
library(ggplot2)
library(caret)
remove.packages("ggplot2")
remove.packages("caret")
install.packages("ggplot2", dep = TRUE)
library(ggplot2)
install.packages("caret", dep = TRUE)
remove.packages("caret")
install.packages("reshape2")
library(caret)
install.packages("recipes")
install.packages("stringr")
install.packages("ggplot2", dep = TRUE)
library(ggplot2)
install.packages("caret", dep = TRUE)
library(caret)
install.packages("stringi")
library(stringi)
library(stringi, dep = TRUE)
install.packages("stringi", dep = TRUE)
install.packages("caret", dep = TRUE, INSTALL_opts = c('--no-lock'))
library(caret)
library(stringi)
install.packages("stringi",type="lin.binary")
install.packages("stringi",type="linux.binary")
install.packages("stringi",type="linux.binary")
install.packages("stringi",type="source")
library(stringi)
getwd()
setwd("AMyLab/ML/R")
install.packages("caret", dep = TRUE)
library(caret)
numFolds = trainControl(method = "cv", number = 10)
install.packages("caret", dep = TRUE)
install.packages("caret", depe = TRUE)
install.packages("caret", depeendencies = TRUE)
install.packages("caret", dependencies = TRUE)
